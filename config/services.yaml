# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    image_directory: 'upload'
    public_directory: '%kernel.project_dir%\public\'
    video_directory: 'Assets\videos\'
    assetsImages_directory: 'Assets\images\'
    document_directory: 'Assets\documents\'
    treatment_directory: 'Assets\Treatments\'
    ffmpeg_binaries: 'D:/software/ffmpeg/bin/ffmpeg.exe'
    ffprobe_binaries: 'D:/software/ffmpeg/bin/ffprobe.exe'
    ffmpeg_timeout: 3600
    ffmpeg_threads: 12
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    app.listener.authentication_success_response:
        class: App\EventListener\AuthenticationSuccessListener
        
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
    new_service_name:
        alias: fos_user.change_password.form.factory
        public: true
   